{"version":3,"sources":["slices/counter/index.js","slices/todo/index.js","slices/todos/index.js","firebase.js","slices/notes/index.js","slices/posts/index.js","components/Counter/index.jsx","components/Notes/index.jsx","components/Posts/index.jsx","components/Todo/index.jsx","components/Todos/index.jsx","store/index.js","App.js","index.js"],"names":["counter","createSlice","name","initialState","val","reducers","increment","state","triple","todo","addItems","action","push","payload","removeItem","filter","item","fetchTask","createAsyncThunk","a","limit","dispatch","getState","console","log","fetch","then","response","json","todos","task","loading","err","extraReducers","fulfilled","pending","rejected","error","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fdb","firestore","rdb","database","fetchNotes","promise","collection","get","snapshot","data","forEach","doc","title","body","id","notes","selectedNoteIndex","selectedNote","count","loadingNotes","fetchPosts","ref","child","exists","catch","posts","Counter","useDispatch","useSelector","actions","bindActionCreators","onClick","Notes","notes_list","useEffect","map","index","Posts","posts_list","Todo","useRef","list","placeholder","current","value","Todos","todo_list","combineReducers","reducer","store","configureStore","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.42ee3aa9.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const counter = createSlice({\n  name: \"counter\",\n  initialState: {\n    val: 3\n  },\n  reducers: {\n    increment: (state) => {\n      state.val += 1;\n    },\n    triple: (state) => {\n      state.val *= 3;\n    }\n  }\n});\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const todo = createSlice({\n  name: \"todo\",\n  initialState: [\"first\", \"second\"],\n  reducers: {\n    addItems: (state, action) => {\n      state.push(action.payload);\n    },\n    removeItem: (state, action) => {\n      return state.filter((item) => item !== action.payload);\n    }\n  }\n});\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchTask = createAsyncThunk(\n  \"todos/fetchTodoTask\",\n  async ({ limit }, { dispatch, getState }) => {\n    console.log(getState);\n    return fetch(\n      `https://jsonplaceholder.typicode.com/todos/?_limit=${\n        getState().counter.val\n      }`\n    )\n      .then((response) => response.json())\n      .then((json) => json);\n  }\n);\n\nexport const todos = createSlice({\n  name: \"todos\",\n  initialState: {\n    task: null,\n    loading: false,\n    err: null\n  },\n  extraReducers: {\n    [fetchTask.fulfilled]: (state, action) => {\n      state.task = action.payload;\n      state.loading = false;\n    },\n    [fetchTask.pending]: (state) => {\n      state.loading = true;\n    },\n    [fetchTask.rejected]: (state, action) => {\n      state.err = action.error;\n      state.loading = false;\n    }\n  }\n});\n","import firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC445yoEHu2xMWHAs-WwISkJfWFl6oTDso\",\n  authDomain: \"student-9772c.firebaseapp.com\",\n  databaseURL: \"https://student-9772c.firebaseio.com\",\n  projectId: \"student-9772c\",\n  storageBucket: \"student-9772c.appspot.com\",\n  messagingSenderId: \"310956542588\",\n  appId: \"1:310956542588:web:eb6042d5d5b7268b0e17f9\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst fdb = firebase.firestore();\nconst rdb = firebase.database();\n\nexport { rdb, fdb };\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// import firebase from 'firebase/app'\nimport { fdb } from \"../../firebase\";\n\nexport const fetchNotes = createAsyncThunk(\"users/fetchNotes\", async () => {\n  const promise = fdb\n    .collection(\"notes\")\n    .get()\n    .then((snapshot) => {\n      const data = [];\n      // assign data\n      snapshot.forEach((doc) => {\n        data.push({\n          title: doc.data().title,\n          body: doc.data().body,\n          id: doc.id\n        });\n      });\n      return data;\n    });\n\n  const data = await promise;\n  return data;\n});\n\nexport const notes = createSlice({\n  name: \"notes\",\n  initialState: {\n    selectedNoteIndex: null,\n    selectedNote: null,\n    notes: null,\n    count: 3,\n    loadingNotes: false,\n    error: null\n  },\n  reducers: {},\n\n  extraReducers: {\n    [fetchNotes.pending]: (state, action) => {\n      if (state.loadingNotes === false) {\n        state.loadingNotes = true;\n      }\n    },\n    [fetchNotes.fulfilled]: (state, action) => {\n      if (state.loadingNotes === true) {\n        state.notes = action.payload;\n        state.loadingNotes = false;\n      }\n    },\n    [fetchNotes.rejected]: (state, action) => {\n      if (state.loadingNotes === true) {\n        state.loadingNotes = false;\n        state.error = action.payload;\n      }\n    }\n  }\n});\n","import { async } from \"@firebase/util\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { rdb } from \"../../firebase\";\n\nexport const fetchPosts = createAsyncThunk(\"posts/fetchPosts\", async () => {\n  const promise = rdb\n    .ref()\n    .child(\"posts\")\n    .get()\n    .then((snapshot) => {\n      const data = [];\n\n      if (snapshot.exists()) {\n        // console.log(snapshot.val());\n        snapshot.forEach((doc) => {\n          data.push({\n            title: doc.val().title,\n            body: doc.val().body\n          });\n        });\n      } else {\n        console.log(\"No data available\");\n      }\n\n      return data;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n\n  const data = await promise;\n  return data;\n});\n\nexport const posts = createSlice({\n  name: \"posts\",\n  initialState: {\n    posts: [],\n    loading: false,\n    err: null\n  },\n  extraReducers: {\n    [fetchPosts.fulfilled]: (state, action) => {\n      state.posts = action.payload;\n      if (state.loading === true) state.loading = false;\n    },\n    [fetchPosts.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [fetchPosts.rejected]: (state, action) => {\n      state.err = action.error;\n    }\n  }\n});\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { counter } from \"../../slices\";\n\nexport const Counter = () => {\n  const dispatch = useDispatch();\n\n  let val = useSelector((state) => state.counter.val);\n  let actions = bindActionCreators(counter.actions, dispatch);\n\n  return (\n    <div>\n      {val} ...<button onClick={() => actions.increment()}>Add</button>\n      <button onClick={() => actions.triple()}>Triple</button>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchNotes } from \"../../slices/notes\";\n\nexport const Notes = () => {\n  const dispatch = useDispatch();\n\n  let notes_list = useSelector((state) => state.notes.notes);\n\n  useEffect(() => {\n    dispatch(fetchNotes());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h3>Data from firestore</h3>\n\n      <ul>\n        {notes_list &&\n          notes_list.map((item, index) => {\n            return (\n              <li key={index}>\n                <button>x</button>\n                {item.title},{item.body}\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPosts } from \"../../slices/posts\";\n\nexport const Posts = () => {\n  const dispatch = useDispatch();\n\n  let posts_list = useSelector((state) => state.posts.posts);\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h3>Data from RDB</h3>\n\n      <ul>\n        {\n          posts_list &&\n            posts_list.map((item, index) => {\n              return (\n                <li key={index}>\n                  {item.title} , {item.body}\n                </li>\n              );\n            })\n          // console.log(\"eeeeee\", posts_list)\n        }\n      </ul>\n    </div>\n  );\n};\n","import { useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { todo } from \"../../slices\";\n\nexport const Todo = () => {\n  const ref = useRef(\"\");\n\n  let list = useSelector((state) => state.todo);\n  let actions = bindActionCreators(todo.actions, useDispatch());\n\n  const handlePush = () => {\n    if (ref.current.value !== \"\") actions.addItems(ref.current.value);\n    ref.current.value = \"\";\n  };\n\n  const handlePop = (data) => {\n    actions.removeItem(data);\n  };\n\n  return (\n    <div>\n      <input placeholder=\"Enter Item\" ref={ref} />\n      <button onClick={handlePush}>Add</button>\n      <br />\n      <ul>\n        {list.map((item, index) => {\n          return (\n            <li key={index}>\n              {\" \"}\n              <button onClick={() => handlePop(item)}>x</button>\n              {item}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { fetchTask } from \"../../slices\";\n\nexport const Todos = () => {\n  const dispatch = useDispatch();\n\n  let todo_list = useSelector((state) => state.todos.task);\n  let loading = useSelector((state) => state.todos.loading);\n\n  const handleFetch = () => {\n    dispatch(fetchTask({ limit: 1 }));\n  };\n\n  return (\n    <div>\n      <h3>Fetched Todos</h3>\n      <ul>\n        {todo_list ? (\n          todo_list.map((item, index) => {\n            return <li key={index}>{item.title}</li>;\n          })\n        ) : loading ? (\n          <li> loading.... </li>\n        ) : (\n          <li onClick={handleFetch}> click to fetch </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport { counter, todo, todos, fetchNotes, notes, posts } from \"../slices\";\n\nconst reducers = combineReducers({\n  counter: counter.reducer,\n  todo: todo.reducer,\n  todos: todos.reducer,\n  notes: notes.reducer,\n  posts: posts.reducer\n});\n\nexport const store = configureStore({\n  reducer: reducers\n});\n\n// store.dispatch(fetchTask())\nstore.dispatch(fetchNotes());\n// store.subscribe(() => console.log(store.getState()));\n","import { Provider } from \"react-redux\";\nimport { Counter } from \"./components/Counter\";\nimport { Notes } from \"./components/Notes\";\nimport { Posts } from \"./components/Posts\";\nimport { Todo } from \"./components/Todo\";\nimport { Todos } from \"./components/Todos\";\nimport { store } from \"./store\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <Counter />\n      <hr />\n      <Todo />\n      <hr />\n      <Todos />\n      <hr />\n      <Notes />\n      <hr />\n      <Posts />\n    </Provider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}